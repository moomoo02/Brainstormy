{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","map":{"version":3,"sources":["C:/Users/vince/Code/brainstormy-master/src/frontend/node_modules/@mui/material/CssBaseline/CssBaseline.js"],"names":["_extends","React","PropTypes","useThemeProps","GlobalStyles","jsx","_jsx","jsxs","_jsxs","html","theme","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","palette","mode","body","color","vars","text","primary","typography","body1","backgroundColor","background","default","common","white","styles","_theme$components","_theme$components$Mui","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","CssBaseline","inProps","props","name","children","Fragment","process","env","NODE_ENV","propTypes","node","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n\n  let defaultStyles = {\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  };\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n\n  return defaultStyles;\n};\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\n\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;"]},"metadata":{},"sourceType":"module"}